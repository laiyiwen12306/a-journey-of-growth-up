1.是一个系统隐含的指针被自动附加在非静态的成员函数参数列表中

2.当前时刻，那个对象调用该函数，那么this 就指向当前调用该函数的对象，系统会自动在该函数的参数列表中添加一个隐藏的this 指针，并且把调用该函数的对象的地址赋给this指针，这样一来，在函数的内部通过this就可以访问当前正在调用该函数的对象的对象的成员。

3.静态函数内部没有this指针


关键字this 代表当前正在调用该方法的对象，可分为两种情况：
1.普通方法：this 代表方法的调用者，即本次调用了该方法的对象；
2.构造方法：this代表了该方法运行所创建的那个新对象。


在java里面，this代表的是调用方法的对象。

class Example{
	int i = 99;
	double b;
	Example(int i,double b)   //有参数的构造方法
	{ 
	this.i=i;// this.i的i代表的是Example类的属性i，等号右边的i代表的是构造方法的形参int   i;
	this.b=b;
	}
}
public class TestThis_2{
	public static void main(String args[]){
		Example aa = new Example( 12 , 2.2 );	
	}
}
在上述的程序里面，this.i调用的是类定义的实例变量，等号右面的i代表的是构造方法中使用的参数。this是用于区分方法的参数和实例变量名的，因为它们名称一样，不好理解和区分